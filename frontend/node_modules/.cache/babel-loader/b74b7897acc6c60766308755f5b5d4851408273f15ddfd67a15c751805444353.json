{"ast":null,"code":"var _jsxFileName = \"D:\\\\study hard\\\\web\\\\ShopWeb\\\\frontend\\\\src\\\\pages\\\\manage\\\\conponent\\\\analysisBoard\\\\index.js\",\n  _s = $RefreshSig$();\nimport styles from './analysisBoard.module.scss';\nimport classNames from 'classnames/bind';\nimport { useState, useEffect } from \"react\";\nimport { fetchData } from '../../../../services/api'; // Import API service\nimport ShowInfor from '../showInfor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nfunction AnalysisBoard({\n  endpoint\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [dataRow, setDataRow] = useState;\n  useEffect(() => {\n    async function getData() {\n      const result = await fetchData(endpoint);\n      if (result && result.length > 0) {\n        setColumns(Object.keys(result[0])); // Lấy tên cột tự động\n        setData(result);\n      }\n    }\n    getData();\n  }, [endpoint]);\n  const handleClickRow = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(\"wrapper\"),\n    children: [data.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: cx(\"table\"),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: cx('row-table'),\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[col]\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: cx(\"no-data\"),\n      children: \"Kh\\xF4ng c\\xF3 d\\u1EEF li\\u1EC7u\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ShowInfor, {\n      data: data,\n      onClick: handleClickRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(AnalysisBoard, \"P4n9a01NogDImWv7CILveUWBd4g=\");\n_c = AnalysisBoard;\nexport default AnalysisBoard;\nvar _c;\n$RefreshReg$(_c, \"AnalysisBoard\");","map":{"version":3,"names":["styles","classNames","useState","useEffect","fetchData","ShowInfor","jsxDEV","_jsxDEV","cx","bind","AnalysisBoard","endpoint","_s","data","setData","columns","setColumns","dataRow","setDataRow","getData","result","length","Object","keys","handleClickRow","className","children","map","col","fileName","_jsxFileName","lineNumber","columnNumber","row","index","onClick","_c","$RefreshReg$"],"sources":["D:/study hard/web/ShopWeb/frontend/src/pages/manage/conponent/analysisBoard/index.js"],"sourcesContent":["import styles from './analysisBoard.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { useState, useEffect } from \"react\";\r\nimport { fetchData } from '../../../../services/api'; // Import API service\r\nimport ShowInfor from '../showInfor';\r\nconst cx= classNames.bind(styles)\r\n\r\nfunction AnalysisBoard({ endpoint }) {\r\n    const [data, setData] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [dataRow, setDataRow] = useState\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const result = await fetchData(endpoint);\r\n            if (result && result.length > 0) {\r\n                setColumns(Object.keys(result[0])); // Lấy tên cột tự động\r\n                setData(result);\r\n            }\r\n        }\r\n        getData();\r\n    }, [endpoint]);\r\n\r\n    const handleClickRow= ()=>{\r\n\r\n    }\r\n    return (\r\n        <div className={cx(\"wrapper\")}>\r\n            {data.length > 0 ? (\r\n                <table className={cx(\"table\")}>\r\n                    <thead>\r\n                        <tr>\r\n                            {columns.map((col) => (\r\n                                <th key={col}>{col}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((row, index) => (\r\n                            <tr className={cx('row-table')} key={index}>\r\n                                {columns.map((col) => (\r\n                                    <td key={col}>{row[col]}</td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p className={cx(\"no-data\")}>Không có dữ liệu</p>\r\n            )}\r\n            <ShowInfor data={data} onClick={handleClickRow} />\r\n        </div>\r\n    );\r\n}\r\nexport default AnalysisBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}